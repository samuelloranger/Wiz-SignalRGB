"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WizLight = void 0;
const udpReqResClient_1 = require("./udpReqResClient");
class WizLight {
    state = {
        r: 255,
        g: 255,
        b: 255,
        c: 255,
        w: 255,
        dimming: 100
    };
    udp;
    constructor(ip, options) {
        const mergedOptions = {
            ip,
            port: 38899,
            retryTimes: 5,
            statusCheckTimeout: 1000,
            ...options,
        };
        this.udp = new udpReqResClient_1.UDPReqResClient(mergedOptions.ip, mergedOptions.port, mergedOptions.statusCheckTimeout, mergedOptions.retryTimes);
    }
    getGetRequestWrapper(params) {
        return {
            method: 'getPilot',
            params
        };
    }
    getSetRequestWrapper(params) {
        return {
            method: 'setPilot',
            params
        };
    }
    async setLightStatus(status) {
        const data = await this.udp.request(this.getSetRequestWrapper({
            state: status
        }));
        if (data.error) {
            return Promise.reject(data.error);
        }
        return data.result.success;
    }
    async setLightProps(props) {
        this.state = {
            ...this.state,
            ...props
        };
        const data = await this.udp.request(this.getSetRequestWrapper({ ...this.state }));
        if (data.error) {
            return Promise.reject(data.error);
        }
        return data.result.success;
    }
    async getStatus() {
        const data = await this.udp.request(this.getGetRequestWrapper({}));
        return data;
    }
    destroy() {
        this.udp.close();
    }
}
exports.WizLight = WizLight;
//# sourceMappingURL=client.js.map